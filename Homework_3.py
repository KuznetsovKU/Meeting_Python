# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N].
#            Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
#            В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X
#
#            5
#            1 2 3 4 5
#            3
#            -> 1
#
# elements_amount = int(input("Введите количество элементов массива: "))
# array = []
# for _ in range(elements_amount):
#     array.append(int(input('Введите очередной элемент массива (число): ')))
#
# requested_value = int(input('Введите искомое число: '))
# counter = 0
# for i in array:
#     if i == requested_value:
#         counter += 1
#
# print(f'Искомое число встречается {counter} раз')

print()

# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
#            Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
#            В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X
#
#            5
#            1 2 3 4 5
#            6
#            -> 5
#
# elements_amount = int(input("Введите количество элементов массива: "))
# array = []
# for _ in range(elements_amount):
#     array.append(int(input('Введите очередной элемент массива (число): ')))
#
# requested_value = int(input('Введите искомое число: '))
# min_difference = abs(requested_value - array[0])
# current_element =array[0]
#
# for i in range(len(array)):
#     if requested_value - array[i] < min_difference:
#         min_difference = abs(requested_value - array[i])
#         current_element = array[i]
#
# print(f'Самый близкий к {requested_value} по значению элемент: {current_element}')

print()

# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. В случае с английским алфавитом очки распределяются так:
#               A, E, I, O, U, L, N, S, T, R – 1 очко;
#               D, G – 2 очка;
#               B, C, M, P – 3 очка;
#               F, H, V, W, Y – 4 очка;
#               K – 5 очков;
#               J, X – 8 очков;
#               Q, Z – 10 очков.
#            А русские буквы оцениваются так:
#               А, В, Е, И, Н, О, Р, С, Т – 1 очко;
#               Д, К, Л, М, П, У – 2 очка;
#               Б, Г, Ё, Ь, Я – 3 очка;
#               Й, Ы – 4 очка;
#               Ж, З, Х, Ц, Ч – 5 очков;
#               Ш, Э, Ю – 8 очков;
#               Ф, Щ, Ъ – 10 очков.
#            Напишите программу, которая вычисляет стоимость введенного пользователем слова.
#            Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.
#
#            Ввод: ноутбук
#            Вывод: 12

points_dict = {
    1 : ["A", "E", "I", "O", "U", "L", "N", "S", "T", "R", "А", "В", "Е", "И", "Н", "О", "Р", "С", "Т"],
    2 : ["D", "G", "Д", "К", "Л", "М", "П", "У"],
    3 : ["B", "C", "M", "P", "Б", "Г", "Ё", "Ь", "Я"],
    4 : ["F", "H", "V", "W", "Y", "Й", "Ы"],
    5 : ["K", "Ж", "З", "Х", "Ц", "Ч"],
    8 : ["J", "X", "Ш", "Э", "Ю"],
    10 : ["Q", "Z", "Ф", "Щ", "Ъ"]
}  # для ускорения работы алгоритма лучше сформировать словарь с буквами в качестве ключей. По отдельности для каждой буквы

word = input('Введите Ваше слово: ').upper()
points_counter = 0
for char in word:
    for points, chars in points_dict.items():
        if char in chars:
            points_counter += points

print(f'Стоимость слова {word} = {points_counter}')